# üìä Dashboard Superstore - Proyecto Django

Este proyecto es un sistema de an√°lisis de ventas basado en el dataset de Superstore. Est√° desarrollado con **Django** y presenta datos mediante gr√°ficos, tablas y filtros interactivos.

---

## üß± Arquitectura del Proyecto

- **Backend:** Django (con consultas SQL directas, sin ORM)
- **Frontend:** Templates Django + Bootstrap, Chart.js, DataTables, JQuery
- **Base de Datos:** MySQL 
- **Autenticaci√≥n:** Sistema integrado de Django con roles (Administrador, Usuario)

---

## üöÄ C√≥mo Desplegar el Proyecto

1. **Clonar el repositorio:**
   ```bash
   git clone https://github.com/Dennys-27/tia_prueba_tecnica.git
   cd dashboard-superstore
   ```

2. **Crear y activar entorno virtual:**
   ```bash
   python -m venv venv
   source venv/bin/activate  # En Windows: venv\Scripts\activate
   ```

3. **Instalar dependencias:**
   ```bash
   pip install -r requirements.txt
   ```

4. **Configurar base de datos:**
   - Editar el archivo `settings.py` y actualizar la secci√≥n `DATABASES`.

5. **Importar dataset:**
   - Crear las tablas necesarias (puedes usar scripts SQL).
   - SCRIP EN CARPETA BD
   - Importar los datos del dataset Superstore.
   - Existe en el proyecto el archivo cargar_csv.py 
        executar : python cargar_csv.py
        ruta_csv = r'C:\Users\denni\Downloads\superstore_final_dataset (1).csv'
        -> COLOCAR RUTA LOCAL DE DONDE DESCARGE EL ARCHIVO

6. **Crear superusuario:**
   ```bash
   python manage.py createsuperuser
   ```

   ** CREAR USUARIO ***
    1) 
    from django.contrib.auth.models import User

    User.objects.create_user(
        username='usuario1',
        password='usuario123',
        email='usuario@ejemplo.com',
        is_staff=False,
        is_superuser=False
    )

7. **Ejecutar el servidor:**
   ```bash
   python manage.py runserver
   ```

8. **Acceder desde el navegador:**
   - URL: `http://localhost:8000/`

---

## üß≠ Funcionalidades del Sistema

- Acceso con autenticaci√≥n por rol (Admin / Usuario).
- Aplicaci√≥n de filtros din√°micos:
  - Por fechas, categor√≠a, ciudad, estado.
- Visualizaci√≥n de:
  - Gr√°ficos (ventas, productos, clientes).
  - Tablas interactivas (con DataTables).
- Exportaci√≥n de datos  EXCEL, CSV, PDF.
- Eliminaci√≥n con confirmaci√≥n usando SweetAlert2. (CRUD VENTAS)

---

## üîê Seguridad

- Validaci√≥n de formularios y filtros.
- Protecci√≥n contra inyecci√≥n SQL mediante consultas parametrizadas.
- Control de acceso por permisos y roles.

---

## üé• Video Demostrativo

‚û°Ô∏è [Ver demostraci√≥n en YouTube](#)  
- GitHub: [https://github.com/Dennys-27/tia_prueba_tecnica/tree/main/video]

---

## üë®‚Äçüíª Autor

- **DENNYS MARLON TIERRA ALVARADO**
- Contacto: [dennismarlon14@gmail.com]
- GitHub: [https://github.com/Dennys-27/]